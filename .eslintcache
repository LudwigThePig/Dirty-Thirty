[{"C:\\code\\ltp\\dirty-30\\src\\App.tsx":"1","C:\\code\\ltp\\dirty-30\\src\\components\\Start.tsx":"2","C:\\code\\ltp\\dirty-30\\src\\index.tsx":"3","C:\\code\\ltp\\dirty-30\\src\\components\\Cursor.tsx":"4","C:\\code\\ltp\\dirty-30\\src\\utils\\mouse.ts":"5","C:\\code\\ltp\\dirty-30\\src\\utils\\useThrottle.tsx":"6","C:\\code\\ltp\\dirty-30\\src\\utils\\useMousePosition.tsx":"7","C:\\code\\ltp\\dirty-30\\src\\components\\LiftScene.tsx":"8","C:\\code\\ltp\\dirty-30\\src\\utils\\constants.ts":"9","C:\\code\\ltp\\dirty-30\\src\\components\\Background.tsx":"10"},{"size":1308,"mtime":1608316382226,"results":"11","hashOfConfig":"12"},{"size":501,"mtime":1608316042538,"results":"13","hashOfConfig":"12"},{"size":500,"mtime":1608251352936,"results":"14","hashOfConfig":"12"},{"size":898,"mtime":1608261240146,"results":"15","hashOfConfig":"12"},{"size":248,"mtime":1608256369371,"results":"16","hashOfConfig":"12"},{"size":1925,"mtime":1608314058655,"results":"17","hashOfConfig":"12"},{"size":822,"mtime":1608261237525,"results":"18","hashOfConfig":"12"},{"size":139,"mtime":1608261313725,"results":"19","hashOfConfig":"12"},{"size":63,"mtime":1608254105608,"results":"20","hashOfConfig":"12"},{"size":375,"mtime":1608316034952,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yxkn4f",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\code\\ltp\\dirty-30\\src\\App.tsx",[],"C:\\code\\ltp\\dirty-30\\src\\components\\Start.tsx",[],"C:\\code\\ltp\\dirty-30\\src\\index.tsx",[],"C:\\code\\ltp\\dirty-30\\src\\components\\Cursor.tsx",[],"C:\\code\\ltp\\dirty-30\\src\\utils\\mouse.ts",[],"C:\\code\\ltp\\dirty-30\\src\\utils\\useThrottle.tsx",["43"],"import React, {useState, useCallback, useRef, useEffect} from 'react'\n\nconst useLatest = <T extends any>(current: T) => {\n  const storedValue = useRef(current);\n  useEffect(() => {\n    storedValue.current = current;\n  });\n  return storedValue;\n}\n\nconst perf = typeof performance !== 'undefined' ? performance : Date;\nconst now = () => perf.now();\n\nexport function useThrottleCallback<CallbackArguments extends any[]>(\n  callback: (...args: CallbackArguments) => void,\n  fps = 30,\n  leading = false\n): (...args: CallbackArguments) => void {\n  const storedCallback = useLatest(callback);\n  const ms = 1000 / fps;\n  const prev = useRef(0);\n  const trailingTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const clearTrailing = () =>\n    trailingTimeout.current && clearTimeout(trailingTimeout.current);\n  const deps = [fps, leading, storedCallback];\n\n  // Reset any time the deps change\n  useEffect(\n    () => () => {\n      prev.current = 0;\n      clearTrailing();\n    },\n    deps,\n  )\n\n  return useCallback(function () {\n    // eslint-disable-next-line prefer-rest-params\n    const args = arguments;\n    const rightNow = now();\n    const call = () => {\n      prev.current = rightNow;\n      clearTrailing();\n      storedCallback.current.apply(null, args as any);\n    }\n    const current = prev.current;\n    // leading\n    if (leading && current === 0) return call();\n    // body\n    if (rightNow - current > ms) {\n      if (current > 0) return call();\n      prev.current = rightNow;\n    }\n    // trailing\n    clearTrailing();\n    trailingTimeout.current = setTimeout(() => {\n      call();\n      prev.current = 0;\n    }, ms);\n  }, deps);\n}\n\nexport function useThrottle<State>(\n  initialState: State | (() => State),\n  fps?: number,\n  leading?: boolean\n): [State, React.Dispatch<React.SetStateAction<State>>] {\n  const state = useState<State>(initialState);\n  return [state[0], useThrottleCallback(state[1], fps, leading)];\n}\n","C:\\code\\ltp\\dirty-30\\src\\utils\\useMousePosition.tsx",[],"C:\\code\\ltp\\dirty-30\\src\\components\\LiftScene.tsx",[],"C:\\code\\ltp\\dirty-30\\src\\utils\\constants.ts",[],"C:\\code\\ltp\\dirty-30\\src\\components\\Background.tsx",[],{"ruleId":null,"fatal":true,"severity":2,"message":"44","line":4,"column":3},"Parsing error: Unexpected token\n\n  2 | \n  3 | const useLatest = <T extends any>(current: ) => {\n> 4 |   const storedValue = useRef(current);\n    |   ^\n  5 |   useEffect(() => {\n  6 |     storedValue.current = current;\n  7 |   });"]